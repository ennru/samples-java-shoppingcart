<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.akkaseverless.samples</groupId>
    <artifactId>samples-java-shoppingcart</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Shopping Cart</name>
    <description>A tiny example for Akka Serverless</description>

    <properties>

        <!-- TODO Update to your own Docker repository or Docker Hub scope -->
        <akkaserverless.dockerImage>my-docker-repo/${project.artifactId}</akkaserverless.dockerImage>
        <akkaserverless.dockerTag>${project.version}</akkaserverless.dockerTag>
        <mainClass>shoppingcart.Main</mainClass>

        <jdk.target>11</jdk.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <akkaserverless-sdk.version>0.7.0-beta.6</akkaserverless-sdk.version>
        <akka-grpc.version>1.1.1</akka-grpc.version>
    </properties>

    <build>
        <resources>
            <!-- Add the generated protobuf descriptor to the classpath, so that source mapping works -->
            <resource>
                <directory>${project.build.directory}/generated-resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.0</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.target}</source>
                    <target>${jdk.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <executions>
                    <execution>
                        <!-- generate Java code for protobuf types -->
                        <id>protobuf</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <writeDescriptorSet>true</writeDescriptorSet>
                            <includeSourceInfoInDescriptorSet>true</includeSourceInfoInDescriptorSet>
                            <descriptorSetFileName>user-function.desc</descriptorSetFileName>
                            <checkStaleness>true</checkStaleness>
                            <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- generate a gRPC client (with Akka gRPC) for integration testing -->
                        <id>grpc-client</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <writeDescriptorSet>true</writeDescriptorSet>
                            <includeSourceInfoInDescriptorSet>true</includeSourceInfoInDescriptorSet>
                            <protoTestSourceRoot>src/main/proto</protoTestSourceRoot>
                            <descriptorSetFileName>user-function-test.desc</descriptorSetFileName>
                            <checkStaleness>true</checkStaleness>
                            <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
                            <protocPlugins>
                                <protocPlugin>
                                    <id>akka-grpc</id>
                                    <groupId>com.lightbend.akka.grpc</groupId>
                                    <artifactId>akka-grpc-scalapb-protoc-plugin_2.12</artifactId>
                                    <version>${akka-grpc.version}</version>
                                    <mainClass>akka.grpc.gen.Main</mainClass>
                                </protocPlugin>
                            </protocPlugins>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainClass}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.26.1</version>
                <configuration>
                    <images>
                        <image>
                            <name>${akkaserverless.dockerImage}:%l</name>
                            <build>
                                <!-- Base Docker image which contains jre-->
                                <from>docker.io/library/adoptopenjdk:${jdk.target}-jre-hotspot</from>
                                <tags>
                                    <!-- tag for generated image -->
                                    <tag>${akkaserverless.dockerTag}</tag>
                                </tags>
                                <ports>
                                    <!-- expose port in Docker container -->
                                    <port>8080</port>
                                </ports>
                                <assembly>
                                    <!-- NOTE: (optional) switch to "artifact-with-dependencies" to show dependencies library-->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <entryPoint>
                                    <arg>java</arg>
                                    <arg>-jar</arg>
                                    <arg>/maven/${project.build.finalName}.jar</arg>
                                </entryPoint>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>build-docker-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push-docker-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

            <plugin>
                <groupId>com.lightbend</groupId>
                <artifactId>akkasls-maven-plugin</artifactId>
                <version>0.24.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dockerImage>${akkaserverless.dockerImage}:${akkaserverless.dockerTag}</dockerImage>
                    <mainClass>${mainClass}</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>lightbend-akkaserverless</id>
            <name>repo-lightbend-com-akkaserverless</name>
            <url>https://repo.lightbend.com/lightbend/akkaserverless/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>lightbend-akkaserverless</id>
            <name>repo-lightbend-com-akkaserverless</name>
            <url>https://repo.lightbend.com/lightbend/akkaserverless/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>com.akkaserverless</groupId>
            <artifactId>akkaserverless-java-sdk</artifactId>
            <version>${akkaserverless-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.akkaserverless</groupId>
            <artifactId>akkaserverless-java-sdk-testkit</artifactId>
            <version>${akkaserverless-sdk.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.7.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
